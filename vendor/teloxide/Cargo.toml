# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70"
name = "teloxide"
version = "0.13.0"
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "An elegant Telegram bots framework for Rust"
homepage = "https://github.com/teloxide/teloxide"
documentation = "https://docs.rs/teloxide/"
readme = "README.md"
keywords = [
    "teloxide",
    "telegram",
    "telegram-bot",
    "telegram-bot-api",
    "bot",
]
categories = [
    "web-programming",
    "api-bindings",
    "asynchronous",
]
license = "MIT"
repository = "https://github.com/teloxide/teloxide"

[package.metadata.docs.rs]
cargo-args = [
    "-Zunstable-options",
    "-Zrustdoc-scrape-examples",
]
features = [
    "full",
    "nightly",
]
rustc-args = [
    "--cfg",
    "dep_docsrs",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[package.metadata.release]
enable-features = ["full"]
tag-prefix = ""

[[package.metadata.release.pre-release-replacements]]
file = "../../README.md"
replace = 'teloxide = { version = "{{version}}"'
search = 'teloxide = \{ version = "[^"]+"'

[[package.metadata.release.pre-release-replacements]]
exactly = 1
file = "../../CHANGELOG.md"
replace = """
## unreleased

## {{version}} - {{date}}"""
search = "## unreleased"

[lib]
name = "teloxide"
path = "src/lib.rs"

[[example]]
name = "admin"
path = "examples/admin.rs"
doc-scrape-examples = true
required-features = [
    "macros",
    "ctrlc_handler",
]

[[example]]
name = "buttons"
path = "examples/buttons.rs"
required-features = [
    "macros",
    "ctrlc_handler",
]

[[example]]
name = "chat_member_updates"
path = "examples/chat_member_updates.rs"

[[example]]
name = "command"
path = "examples/command.rs"
required-features = [
    "macros",
    "ctrlc_handler",
]

[[example]]
name = "db_remember"
path = "examples/db_remember.rs"
required-features = [
    "sqlite-storage-nativetls",
    "redis-storage",
    "bincode-serializer",
    "macros",
]

[[example]]
name = "dialogue"
path = "examples/dialogue.rs"
required-features = [
    "macros",
    "ctrlc_handler",
]

[[example]]
name = "dispatching_features"
path = "examples/dispatching_features.rs"
required-features = [
    "macros",
    "ctrlc_handler",
]

[[example]]
name = "heroku_ping_pong"
path = "examples/heroku_ping_pong.rs"
required-features = [
    "webhooks-axum",
    "ctrlc_handler",
]

[[example]]
name = "inline"
path = "examples/inline.rs"
required-features = [
    "macros",
    "ctrlc_handler",
]

[[example]]
name = "ngrok_ping_pong"
path = "examples/ngrok_ping_pong.rs"
required-features = [
    "webhooks-axum",
    "ctrlc_handler",
]

[[example]]
name = "purchase"
path = "examples/purchase.rs"
required-features = [
    "macros",
    "ctrlc_handler",
]

[[example]]
name = "shared_state"
path = "examples/shared_state.rs"
required-features = ["ctrlc_handler"]

[[example]]
name = "throw_dice"
path = "examples/throw_dice.rs"
required-features = ["ctrlc_handler"]

[[test]]
name = "command"
path = "tests/command.rs"

[[test]]
name = "postgres"
path = "tests/postgres.rs"
required-features = [
    "postgres-storage-nativetls",
    "cbor-serializer",
    "bincode-serializer",
]

[[test]]
name = "redis"
path = "tests/redis.rs"
required-features = [
    "redis-storage",
    "cbor-serializer",
    "bincode-serializer",
]

[[test]]
name = "sqlite"
path = "tests/sqlite.rs"
required-features = [
    "sqlite-storage-nativetls",
    "cbor-serializer",
    "bincode-serializer",
]

[dependencies.aquamarine]
version = "0.5.0"

[dependencies.axum]
version = "0.7.0"
optional = true

[dependencies.bincode]
version = "1.3"
optional = true

[dependencies.bytes]
version = "1.0"

[dependencies.deadpool-redis]
version = "0.14"
features = ["rt_tokio_1"]
optional = true

[dependencies.derive_more]
version = "0.99"

[dependencies.dptree]
version = "0.3.0"

[dependencies.either]
version = "1.9.0"

[dependencies.futures]
version = "0.3.15"

[dependencies.log]
version = "0.4"

[dependencies.mime]
version = "0.3"

[dependencies.pin-project]
version = "1.0"

[dependencies.rand]
version = "0.8.5"
optional = true

[dependencies.serde]
version = "1.0"
features = ["derive"]

[dependencies.serde_cbor]
version = "0.11"
optional = true

[dependencies.serde_json]
version = "1.0"

[dependencies.sqlx]
version = "0.7.3"
features = [
    "macros",
    "sqlite",
    "postgres",
]
optional = true
default-features = false

[dependencies.teloxide-core]
version = "0.10"
default-features = false

[dependencies.teloxide-macros]
version = "0.8"
optional = true

[dependencies.thiserror]
version = "1.0"

[dependencies.tokio]
version = "1.8"
features = ["fs"]

[dependencies.tokio-stream]
version = "0.1.8"

[dependencies.tokio-util]
version = "0.7"

[dependencies.tower]
version = "0.4.13"
optional = true

[dependencies.tower-http]
version = "0.5.2"
features = ["trace"]
optional = true

[dependencies.url]
version = "2.2.2"

[dev-dependencies.chrono]
version = "0.4"

[dev-dependencies.pretty_env_logger]
version = "0.5.0"

[dev-dependencies.rand]
version = "0.8.3"

[dev-dependencies.reqwest]
version = "0.11.11"

[dev-dependencies.serde]
version = "1"

[dev-dependencies.serde_json]
version = "1"

[dev-dependencies.tokio]
version = "1.8"
features = [
    "fs",
    "rt-multi-thread",
    "macros",
]

[dev-dependencies.tokio-stream]
version = "0.1"

[features]
bincode-serializer = ["bincode"]
cache-me = ["teloxide-core/cache_me"]
cbor-serializer = ["serde_cbor"]
ctrlc_handler = ["tokio/signal"]
default = [
    "native-tls",
    "ctrlc_handler",
    "teloxide-core/default",
]
erased = ["teloxide-core/erased"]
full = [
    "webhooks",
    "webhooks-axum",
    "sqlite-storage-nativetls",
    "redis-storage",
    "postgres-storage-nativetls",
    "cbor-serializer",
    "bincode-serializer",
    "macros",
    "ctrlc_handler",
    "teloxide-core/full",
    "native-tls",
    "rustls",
    "throttle",
    "cache-me",
    "trace-adaptor",
    "erased",
]
macros = ["teloxide-macros"]
native-tls = ["teloxide-core/native-tls"]
nightly = ["teloxide-core/nightly"]
postgres-storage-nativetls = [
    "sqlx",
    "sqlx/runtime-tokio-native-tls",
    "native-tls",
]
postgres-storage-rustls = [
    "sqlx",
    "sqlx/runtime-tokio-rustls",
    "rustls",
]
redis-storage = ["deadpool-redis"]
rustls = ["teloxide-core/rustls"]
rustls-native-roots = ["teloxide-core/rustls-native-roots"]
sqlite-storage-nativetls = [
    "sqlx",
    "sqlx/runtime-tokio-native-tls",
    "native-tls",
]
sqlite-storage-rustls = [
    "sqlx",
    "sqlx/runtime-tokio-rustls",
    "rustls",
]
throttle = ["teloxide-core/throttle"]
trace-adaptor = ["teloxide-core/trace_adaptor"]
webhooks = ["rand"]
webhooks-axum = [
    "webhooks",
    "axum",
    "tower",
    "tower-http",
]

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = [
    "cfg(CI_POSTGRES)",
    "cfg(CI_REDIS)",
]
